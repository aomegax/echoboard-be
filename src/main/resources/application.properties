# Info
info.application.name=@project.name@
info.application.artifactId=dev.aomegax.echoboard
#info.application.version=${version}
#info.application.version=${appVersion}
info.application.version=1.2.3
info.application.description=@project.description@
info.properties.environment=${ENV:dev}

# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.jmx.exposure.include=health,info
management.info.env.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Openapi
springdoc.writer-with-order-by-keys=true
springdoc.writer-with-default-pretty-printer=true

# Server
server.servlet.context-path=/
server.port=8080

# Logging
logging.level.root=${DEFAULT_LOGGING_LEVEL:INFO}
logging.level.dev.aomegax=${APP_LOGGING_LEVEL:INFO}

# CORS configuration
cors.configuration=${CORS_CONFIGURATION:{"origins": ["*"], "methods": ["*"]}}

# Database settings
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER}

# Redis settings
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASSWORD}

# JPA settings
spring.jpa.database-platform=${SPRING_JPA_DB_PLATFORM}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.default_schema=${DATABASE_SCHEMA}
spring.jpa.open-in-view=false

# Security
#rsa:
#    private-key: classpath:certs/private-key-pkcs8.pem
#    public-key: classpath:certs/public-key.pem

spring.session.store-type=redis


# OAuth
#spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:${server.port}
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com
#for google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid, profile,email

#for github
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email,read:user

# Multipart file upload configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
